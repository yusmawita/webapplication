apply plugin: 'war'
apply plugin: 'com.bmuschko.tomcat'
apply plugin: 'java'
apply plugin: 'propdeps'
apply plugin: 'propdeps-maven'
apply plugin: 'propdeps-idea'
apply plugin: 'propdeps-eclipse'
apply plugin: 'eclipse-wtp'
apply plugin: 'idea'
apply plugin: 'rebel'

println "PROJECT=" + project.name

buildscript {
    repositories {
        mavenLocal()
        mavenCentral()

        maven { url 'http://repo.spring.io/plugins-release' }
    }

    dependencies {
        classpath 'com.bmuschko:gradle-tomcat-plugin:2.0'
        classpath 'org.springframework.build.gradle:propdeps-plugin:0.0.5'
        classpath 'org.zeroturnaround:gradle-jrebel-plugin:1.1.2'
    }
}


repositories {
    mavenLocal()
    mavenCentral()

    maven { url 'http://repo.spring.io/plugins-release' }
}


ext {
    springVersion = "4.0.5.RELEASE"
    springSecurityVersion = "3.2.5.RELEASE"
    thymeleafVersion = "2.1.3.RELEASE"
    tomcatVersion = "7.0.54"
}

dependencies {


    compile "org.springframework:spring-core:$springVersion"
    compile "org.springframework:spring-webmvc:$springVersion"
    compile "org.springframework:spring-orm:$springVersion"
    compile "org.springframework:spring-context-support:$springVersion"

    compile "org.springframework.security:spring-security-web:$springSecurityVersion"
    compile "org.springframework.security:spring-security-config:$springSecurityVersion"
    compile "org.springframework.security:spring-security-taglibs:$springSecurityVersion"

    compile "org.thymeleaf:thymeleaf:$thymeleafVersion"
    compile "org.thymeleaf:thymeleaf-spring4:$thymeleafVersion"
    compile "org.thymeleaf.extras:thymeleaf-extras-springsecurity3:2.1.1.RELEASE"
    compile "nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect:1.2.7"

    compile "org.hibernate:hibernate-entitymanager:4.3.5.Final"
    compile "org.hibernate:hibernate-validator:4.3.1.Final"
    compile "mysql:mysql-connector-java:5.1.30"
    compile "c3p0:c3p0:0.9.1.2"

    compile "joda-time:joda-time:2.4"

    compile "org.slf4j:slf4j-api:1.7.5"
    runtime "org.slf4j:slf4j-log4j12:1.7.5"

    testCompile "org.springframework:spring-test:$springVersion"
    testCompile "junit:junit:4.11"
    testCompile "org.mockito:mockito-core:1.9.5"
    testCompile "org.hamcrest:hamcrest-library:1.3"

    providedCompile "javax.servlet:javax.servlet-api:3.0.1"

    tomcat "org.apache.tomcat.embed:tomcat-embed-core:$tomcatVersion",
            "org.apache.tomcat.embed:tomcat-embed-logging-juli:$tomcatVersion"
    tomcat("org.apache.tomcat.embed:tomcat-embed-jasper:$tomcatVersion") {
        exclude group: 'org.eclipse.jdt.core.compiler', module: 'ecj'
    }
}

test {
    testLogging {
        // Show that tests are run in the command-line output
        events 'started', 'passed'
    }
}

def appName = 'webapp'
def appWarName = appName + '.war'
def tomcatWebAppsHome = '/usr/local/tomcat7/webapps'

war {
    archiveName appWarName
}

task deployWar() {
    doLast {
        delete tomcatWebAppsHome + "/" + appName

        logger.lifecycle("Gonna deploy ${appWarName} into ${tomcatWebAppsHome} from ${libsDir.getPath()}")

        copy {
            from libsDir
            into "${tomcatWebAppsHome}"
            include "${appWarName}"
        }
    }
}

rebel {
    alwaysGenerate = true
    showGenerated = true
}

war.dependsOn(generateRebel)
deployWar.dependsOn(war)

task wrapper(type: Wrapper) { gradleVersion = '2.1' }

tomcatRunWar.contextPath = ''
